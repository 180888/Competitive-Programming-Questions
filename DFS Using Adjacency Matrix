// Program to represent GRAPH (Nodes, Edges) using adjacency List and perform the Depth-First-Search traversal

#include <bits/stdc++.h>
using namespace std;
vector<vector<int> > adj;

void addEdge(int x, int y)
{
	adj[x][y] = 1;
	adj[y][x] = 1;
}

void dfs(int start, vector<bool>& visited)
{

	cout << start << " ";
	visited[start] = true;
	for (int i = 0; i < adj[start].size(); i++) {
		if (adj[start][i] == 1 && (!visited[i])) {
			dfs(i, visited);
		}
	}
}

int main()
{
	int vertex = 5,edge=4;
	adj = vector<vector<int> >(vertex, vector<int>(vertex, 0));

	addEdge(0, 1);
	addEdge(0, 2);
	addEdge(0, 3);
	addEdge(0, 4);
	vector<bool> visited(vertex, false);
	dfs(0, visited);
}
